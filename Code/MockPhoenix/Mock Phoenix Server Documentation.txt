Mock Phoenix Server Documentation

General notes:
   All parameters are URL encoded.
   It can take anywhere from ten seconds to ten minutes for a test request to be processed
   by the system, and potentially hours for a test to finish execution. I chose to make mock
   test results instantaneously available on the mock server to make your testing go faster.
   That being said, keep in mind that it can take minutes before TeamCity even begins to try
   to schedule a test for running. This means that I can't supply you with a TeamCity buildId
   or else the return from the POST request to /api/run could take a really, really long time
   to complete.
   I was unable to include a database containing a list of test filepaths so unfortunately you
   won't be able to test whether or not a file exists within Phoenix's database. Hopefully this
   won't give you too much trouble and I don't really forsee it being an issue.
   If you have any issues, contant me any time at any of the following:
      email: richiehernandez@mac.com
      phone: (225) 205-4047
      skype: richie.hernandez

GET /api/results
	This allows you to get all of the run results for a given test.
	Paramters:	file: SVN path to the test
	Returns:	
      If the test has run before:
			HTTP code 200
			A JSON string that contains the name of the supplied test and a list of
         objects containing run information for the previous runs of that test.

         Example:
         {
             "file": "echo/echo.cs",
             "results": [
                 {
                     "status": "SUCCESS",
                     "message": "",
                     "passed": 36,
                     "failed": 0,
                     "ignored": 76,
                     "tcHref": "http://teamcity/guestAuth/builds/example"
                 }
             ]
         }

		If no file is specified:
         HTTP code 400
         A JSON object that contains the filepath supplied and a message with the
         text "SVN filepath must be supplied"

         Example:
         {
            file = "/echo/test.cs",
            message = "SVN filepath must be supplied"
         }

      If the test has not run before:
         HTTP Code 404
         A JSON object that contain the filepath supplied and a message with the
         text "This test has not been run before"

         Example:
         {
             "file": "echo/ec2ho.cs",
             "message": "This test has not been run before"
         }

POST /api/run
   Begins a simulated test run.
   Parameters: user: The username of the person attempting to run a test.
               team: The team that the user belongs to.
               file: SVN path to the test to run
               environment: Optional. Name of the UltiPro environment to run tests on.
                  If one isn't provided, an anonymous environment will be created. This
                  usually takes about 45 minutes.

   Returns:
      If no username is specified:
         HTTP code 400
         A JSON object that contains a message with the text "Username must be supplied"

         Example:
         {
            message = "Username must be supplied"
         }

      If no team is specified:
         HTTP code 400
         A JSON object that contains a message with the text "Team name must be supplied"

         Example:
         {
            message = "Team name must be supplied"
         }

      If no file is specified:
         HTTP code 400
         A JSON object that contains a message with the text "SVN filepath must be supplied"

         Example:
         {
            message = "SVN filepath must be supplied"
         }

      If the file supplied is not a known test:
         HTTP code 404
         A JSON object that contains a message with the text "Test not found"

         Example:
         {
            file = "NotATest.pdf"
            message = "SVN filepath must be supplied"
         }

         Since I can't include the Phoenix database with the mock server, there's no good way 
         for me to simulate whether or not a given test exists.

      On success:
         HTTP code 201
         A JSON string containing information about the test that's just been scheduled to run.

         Example:
         {
            "file": "echo/echo.cs",
            "user": "RichardH",
            "team": "vteam",
            "fixtureName": "echo/echo.cs",
            "suiteId": 1,
            "suiteName": "SR_echo/echo.cs"
         }

DELETE /api/run
   This allows you to simulate the completion of a test run. This API endpoint will not be
   available in the real Phoenix.
   Parameters: file: SVN path to the test being run
               fail: Optional. A value of "yes" will guarantee that the test run will fail.
                     A value of "no" will guarantee that the test run will pass.
                     If left unspecified, the test will randomly fail or pass.
   Returns:
      If file is unspecified:
         HTTP code 400
         A JSON string containing a message with the text "SVN filepath must be supplied"

         Example:
         {
            message = "SVN filepath must be supplied"
         }

      If the specified test is not running:
         HTTP code 404
         A JSON string containing the file specified and a message with the test "The specified
         test is not currently running"

         Example:
         {
             "file": "echo/echo.cs",
             "message": "The specified test is not currently running"
         }

      On success:
         HTTP code 200
         A JSON string containing the file specified and a message with the text "Test complete"

         Example:
         {
             "file": "echo/echo.cs",
             "message": "Test complete"
         }

GET /api/error
   This returns the error message from the last time a given test failed.
   Parameters: file: SVN path to the file that was run

   Returns: 
      If no file is supplied:
         HTTP code 400
         A JSON string containing the message "SVN filepath must be supplied"

         Example:
         {
             "message": "SVN filepath must be supplied"
         }

      If the test hasn't been run yet: 
         HTTP code 404
         A JSON string containing the test requested and the message "This test
         has not been run before"

         Example:
         {
             "file": "echo/ec2ho.cs",
             "message": "This test has not been run before"
         }

      If the test has never failed:
         HTTP code 200
         A JSON string containing the test requested and the message "This test
         has never failed"

         Example:
         {
             "file": "echo/ec2ho.cs",
             "message": "This test has never failed"
         }

      On success:
         HTTP code 200
         A JSON string contianing the filepath requested and the failure message

         Example: 
         {
            "file": "echo/ec2ho.cs",
            "message": "echo/ec2ho.cs failure message 0" 
         }

         The error message returned from the real Phoenix will contain the exception
         that caused the test to fail.
